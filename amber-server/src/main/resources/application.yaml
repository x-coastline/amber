server.port: 8184
server.compression.enabled: true
server.compression.mime-types:
  - image/png
  - image/jpeg
  - image/jpg
  - text/html
  - application/javascript
  - text/css
  - application/octet-stream
  - application/json
server.compression.min-response-size: 1024

# cache platform configuration
#==============================================================================
# registry
#==============================================================================
# default none, 可以选择 zookeeper
amber.registry.model: none
# 注册到 zookeeper
amber.registry.zookeeper.address: xxx
amber.registry.zookeeper.base-path: /amber
# 注册到 redis
# amber.registry.redis.address: 192.168.5.2:8000,192.168.5.3:8000
# amber.registry.redis.prefix-key: amber

# center list
amber.registry.center-list: xxx

# worker list, split by ','
amber.registry.worker-list: xxx

#==============================================================================
# authority
#==============================================================================
amber.authority.default-user: redis
amber.authority.default-password: redis

#==============================================================================
# monitor
#==============================================================================
# 监控数据保存天数，0 为不清除
amber.monitor.data-keep-days: 15

#==============================================================================
# alert
#==============================================================================
# 告警数据保存天数，0 为不清除
amber.alert.data-keep-days: 15

#==============================================================================
# installation
#==============================================================================
# redis 实例安装的根目录
# 物理机启动时，目录如 /data/redis/machine/{port}/
# docker启动时，挂载目录如 /data/redis/docker/{port}/
amber.installation.root-path: /data/redis
# redis.conf(absolute director)
amber.installation.redis-conf-path: /data/conf

# redis docker rest
amber.installation.docker.docker-host: tcp://%s:2375
#==============================================================================
# analysis
#==============================================================================

#==============================================================================
# other
#==============================================================================
amber.database: xxx
#==============================================================================
# spring configuration
#==============================================================================
spring.application.name: amber

# spring.aop.proxy-target-class: true
#==============================================================================
# spring database configuration
#==============================================================================
# 必填，与数据库同名
spring.datasource.database: amber
spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
spring.datasource.url: jdbc:mysql://192.168.0.112:3306/amber?useUnicode=true&characterEncoding=utf-8
spring.datasource.username: root
spring.datasource.password: 123456
# hikari 数据库连接池
spring.datasource.hikari.pool-name: amber-hikaricp
# 最小空闲连接数量
spring.datasource.hikari.minimum-idle: 10
# 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout: 180000
# 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size: 50
# 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit: true
# 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime: 600000
# 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout: 30000
spring.datasource.hikari.connection-test-query: 'SELECT 1'

#==============================================================================
# spring oauth2 configuration
#==============================================================================

#==============================================================================
# mybatis configuration
#==============================================================================
# 开启下划线转驼峰
mybatis.configuration.mapUnderscoreToCamelCase: true